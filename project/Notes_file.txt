<<< 4. Environment and Dependancies >>>

Project deployment

Steps

Open AWS cloud shell in US-east-1

# shell
    aws ec2 create-restore-image-task --object-key ami-0ec6fdfb365e5fc00.bin --bucket udacity-srend --name "udacity-rirving"

< Refer to line 34 on the README >

aws ec2 copy-image --source-image-id ami-0d2e5365761b86bfa --source-region us-east-1 --region us-east-2 --name "udacity-rirving"
aws ec2 copy-image --source-image-id ami-0d2e5365761b86bfa --source-region us-east-1 --region us-west-1 --name "udacity-rirving"
----------------------------------------------------------

AMI details
east-1
"ImageId": "ami-0d2e5365761b86bfa"

{east-2
    "ImageId": "ami-062a001e7b2179fee"
}
{west-1
    "ImageId": "ami-0a4dfce14896f1f90"
}


----------------------------------------------------------


< Refer to line 43 on the README >
< Refer to line 48 on the README >
< Refer to line 53 on the README  - key pairs >

< Refer to line 55 on the README >
    creating key pairs


< Copy code below into us-east-2 cloudshell>
# . HELM Setup
export VERIFY_CHECKSUM=false
curl -sSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

# Terraform
wget https://releases.hashicorp.com/terraform/1.0.7/terraform_1.0.7_linux_amd64.zip
unzip terraform_1.0.7_linux_amd64.zip
mkdir ~/bin
mv terraform ~/bin
export TF_PLUGIN_CACHE_DIR="/tmp"

# kubectl
curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
chmod +x ./kubectl
mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc

#< Refer to line 75 on the README >
cd Planning-for-High-Availability-and-Incident-Response/project/starter-code/zone1/
terraform init
terraform apply --auto-approve

< STOP COMMANDS COPY >
# The terrraform apply could take 20 mins

#< Refer to line 83 on the README >
aws eks --region us-east-2 update-kubeconfig --name udacity-cluster
#< Refer to line 85 on the README >
  kubectl config use-context <cluster_name arn:aws>
# Confirm with 
  kubectl get pods --all-namespaces

terraform apply
kubectl create namespace monitoring
terraform apply

 #< GO BACK TO LINE 112 in README.md file>

 11. Install Prometheus and Grafana

    # Change directories to your **project** directory 
    cd ../..

    kubectl create secret generic additional-scrape-configs --from-file=prometheus-additional.yaml --namespace monitoring

    helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

    helm install prometheus prometheus-community/kube-prometheus-stack -f "values.yaml" --namespace monitoring


